/**
 * @file
 * API for of a generic function for the printf family to use.
 *
 * Copyright Nuvation Research Corporation 2012-2017. All Rights Reserved.
 * www.nuvation.com
 */

#ifndef NUVC_GENERIC_PRINTF_H_
#define NUVC_GENERIC_PRINTF_H_

#include <stdarg.h>

/**
 * Callback for printing a single character.
 *
 * @param[in] arg   user-defined space for the callback to use as memory
 * @param[in] ch    character to print
 * @return          number of characters actually printed
 */
typedef int (*AppPrintChar)(void *arg, int ch);

/**
 * Callback for printing multiple characters.
 *
 * @param[in] arg       user-defined space for the callback to use as memory
 * @param[in] string    points to the characters to be printed
 * @param[in] length    number of characters to be printed
 * @return              number of characters actually printed
 */
typedef int (*AppPrintString)(void *arg, const char *string, int length);

typedef struct {
    AppPrintChar printChar;
    AppPrintString printString;
} AppPrintFuncs;

/**
 * Formats the provided arguments for printf-like printing.
 *
 * The arg pointer argument is optional. If it's not being used by the
 * callbacks, it can simply be set to NULL.
 *
 * @param[in] funcs     points to the callbacks for printing characters
 * @param[in] arg       points to the argument to pass to the callbacks
 * @param[in] format    format string for printf functions
 * @param[in] args      variable argument list generated by caller
 * @return              number of characters printed
 */
extern int AppPrint(AppPrintFuncs *funcs, void *arg, const char *format, va_list args);

#endif /* NUVC_GENERIC_PRINTF_H_ */
